// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  name          String?
  orders        Order[]
  role          UserRole        @default(USER)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  ProductReview ProductReview[]
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  category    Category?        @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  images      ProductImage[]
  variants    ProductVariant[]
  reviews     ProductReview[]
  orders      Order[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  name      String
  price     Float
  stock     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int
  user            User        @relation(fields: [userId], references: [id])
  products        Product[]
  total           Float
  status          OrderStatus @default(PENDING)
  coupon          String?
  shippingMethod  String?
  shippingAddress String?
  billingAddress  String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  imageUrl  String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
